[system]
#Set to 1 to enable test mode
test_mode=0

#Calibration points for ADC.
#Two points are needed by each ADC channel.
#The x value refers to the ADC one, the y is the output.
#NOTE: y values are divided by 1000 before appling the convertion.
#      e.g. p2y=12640 will be converted to 12.640
[calib00]
#VIN (V)
p1x=0
p1y=0
p2x=479
p2y=6030

[calib01]
#+5V
p1x=0
p1y=0
p2x=851
p2y=4940

[calib02]
#+3.3V
p1x=0
p1y=0
p2x=976
p2y=3320

[calib03]
#Current (mA)
p1x=8
p1y=0
p2x=90
p2y=151000

[calib04]
#Pressure (mBar)
p1x=0
p1y=0
p2x=944
p2y=1013000

[calib05]
#PT100 temperature T1 (°C)
p1x=182
p1y=-83000
p2x=719
p2y=-4090

[calib06]
#PT100 temperature T2 (°C)
p1x=181
p1y=-83000
p2x=718
p2y=-4090

[calib07]
#Relative humitidy (%)
p1x=171
p1y=0
p2x=682
p2y=80000

[status]
#Maximum ground altitude, used in order to check if
#the ballon is landed or it is still waiting to be launched.
#unit: meters
ground_alt=1500

#Minimum landing altitude.
#When the ballon is falling below this altitude the landing signal
#will be sent to the camera and the buzzer will start to beep.
#unit: meters
landing_alt=3600

#Tropopause altitude
#When the baloon will rise abose this altitude, the STRAOSPHERE signal will be
#sent to the camera.
#unit: meters
tropopause_alt=12500

#Ascent/discent rates used to check if the baloon is going up or down.
#The ballon is going up if the ascent rate is greater than rate_up and is
#going down if the descent rate is lower than rate_down.
#If the ascent rate is lower than rate_up but higher than rate_down,
#the baloon is considered as hovering (or grounded if the altitude is lower
#than ground_alt).
#unit: centimeters/second
rate_up=300
rate_down=-300


[cutoff]
#Maximum mission time.
#If this time elapses, the cutoff will be activated.
#unit: seconds
mission_timeout=6090

#A countdown for the cutoff will be also activated if the altitude drops
#delta_altitude meters below the maximum.
#unit: meters
delta_altitude=500

#Timeout of the altitude countdown.
#When the altitude drops below the maximum, a countdown will be activated.
#After that the cutoff will cut the rope.
#unit: seconds
altitude_timeout=30

#Starting position for the launch.
#unit: degrees * 1000000 eg 43.606414° = 43606414
start_latitude=43606414
start_longitude=11311832

#Maximum distance from launch position.
#If the distance of the baloon will be greater than this, a countdown will be
#activated.
#unit: meters
dist_max_meters=50000

#Timeout of the maximum distance countdown.
#If the distance from the launch position rises above the maximum,
#a countdown will be activated.
#After that the cutoff will cut the rope.
#unit: seconds
dist_timeout=300

#Maximum altitude.
#If the altitude of the baloon will be greater than this, a countdown will be
#activated.
#unit: meters
altmax_meters=31000

#Timeout of the maximum altitude countdown.
#If the altitude rises above the maximum,
#a countdown will be activated.
#After that the cutoff will cut the rope.
#unit: seconds
altmax_timeout=60

#PWM duty cycle used when the cutoff triggers.
#Ranges from 0 (0%) to 65535 (100%)
pwm_duty=65535

[landing_buz]
#Timeout from mission start.
#After that the buzzer will start to beep in any case.
#unit: seconds
buz_timeout=9000

[logging]
#Interval for packets sent through APRS.
#Note: we have a budget of about 1300 messages.
#unit: seconds
aprs_interval=15

#Callsign used for APRS packets.
send_call=stsp3

#Delay between SD log messages.
#unit: seconds
log_interval=3

