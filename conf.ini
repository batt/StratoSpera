[system_cfg]
#Set to 1 to enable test mode
test_mode=0

#Delay between SD log messages.
#unit: seconds
log_interval=3

[sensor_cal]
#Calibration points for ADC.
#Two points are needed by each ADC channel.
#The x value refers to the ADC one, the y is the output (in various units
#of measure).

#VIN (V)
vin_p1x=0
vin_p1y=0
vin_p2x=479
vin_p2y=6.03

#+5V
5v_p1x=0
5v_p1y=0
5v_p2x=851
5v_p2y=4.94

#+3.3V
3v3_p1x=0
3v3_p1y=0
3v3_p2x=976
3v3_p2y=3.32

#Current (mA)
curr_p1x=8
curr_p1y=0
curr_p2x=90
curr_p2y=151

#Pressure (mBar)
press_p1x=0
press_p1y=0
press_p2x=944
press_p2y=1013

#PT100 temperature T1 (°C)
t1_p1x=182
t1_p1y=-83
t1_p2x=719
t1_p2y=-4.09

#PT100 temperature T2 (°C)
t2_p1x=181
t2_p1y=-83
t2_p2x=718
t2_p2y=-4.09

#Relative humitidy (%)
hum_p1x=171
hum_p1y=0
hum_p2x=682
hum_p2y=80

[status]
#Maximum ground altitude, used in order to check if
#the ballon is landed or it is still waiting to be launched.
#unit: meters
ground_alt=1500

#Minimum landing altitude.
#When the ballon is falling below this altitude the landing signal
#will be sent to the camera and the buzzer will start to beep.
#unit: meters
landing_alt=3600

#Tropopause altitude
#When the baloon will rise abose this altitude, the STRAOSPHERE signal will be
#sent to the camera.
#unit: meters
tropopause_alt=12500

#Ascent/descent rates used to check if the baloon is going up or down.
#The ballon is going up if the ascent rate is greater than rate_up and is
#going down if the descent rate is lower than rate_down.
#If the ascent rate is lower than rate_up but higher than rate_down,
#the baloon is considered as hovering (or grounded if the altitude is lower
#than ground_alt). Some hysteresis is used to avoid noise on trigger levels.
#unit: m/s
rate_up=3.00
rate_down=-3.00


[cutoff]
#Maximum mission time.
#If this time elapses, the cutoff will be activated.
#unit: seconds
mission_timeout=6090

#A countdown for the cutoff will be also activated if the altitude drops
#delta_altitude meters below the maximum so far.
#unit: meters
delta_altitude=500

#Timeout of the altitude countdown.
#When the altitude drops below the maximum, a countdown will be activated.
#After that the cutoff will cut the rope.
#unit: seconds
altitude_timeout=30

#Starting position for the launch.
#unit: decimal degrees, North and East are positive, while
#South and West are negative.
start_latitude=43.606414
start_longitude=11.311832

#Maximum distance from launch position.
#If the distance of the baloon will be greater than this, a countdown will be
#activated.
#unit: meters
dist_max_meters=50000

#Timeout of the maximum distance countdown.
#If the distance from the launch position rises above the maximum,
#a countdown will be activated.
#After that the cutoff will cut the rope.
#unit: seconds
dist_timeout=300

#Maximum altitude.
#If the altitude of the baloon will be greater than this, a countdown will be
#activated.
#unit: meters
altmax_meters=31000

#Timeout of the maximum altitude countdown.
#If the altitude rises above the maximum,
#a countdown will be activated.
#After that the cutoff will cut the rope.
#unit: seconds
altmax_timeout=60

#PWM duty cycle used when the cutoff triggers.
#Ranges from 0 (0%) to 65535 (100%)
pwm_duty=65535

[landing_buz]
#Timeout from mission start.
#After that the buzzer will start to beep in any case.
#unit: seconds
buz_timeout=9000

[radio]
#Interval for packets sent through APRS.
#Note: we have a budget of about 1300 messages.
#unit: seconds
aprs_interval=15

#Callsign used for APRS packets.
send_call=stsp3
